<?php

/**
 * Implements hook_preprocess_html().
 */
function custom_theme_preprocess_html(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $current_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  // Get the path for setting colourings.
  $exploded = explode('/', $current_alias);
  if (isset($exploded[1]) && $top_level_parent = $exploded[1]) {

    if ($top_level_parent === 'hr' || $top_level_parent === 'borger') {
      $variables['attributes']['class'][] = 'is-path-' . $top_level_parent;
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function custom_theme_preprocess_page(array &$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  $current_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  // Get the path for setting colourings.
  $exploded = explode('/', $current_alias);
  if (isset($exploded[1]) && $top_level_parent = $exploded[1]) {

    if ($top_level_parent === 'hr' || $top_level_parent === 'borger') {
      $variables['current_path'] = $top_level_parent;
    }
  }

  if (!isset($variables['current_path'])) {
    $variables['current_path'] = 'default';
  }
}

/*
 * Implements hook_preprocess_paragraph().
 */
function custom_theme_preprocess_paragraph(&$variables) {}

/*
 * Implements hook_preprocess_paragraph().
 * For text with image paragraphs.
 */
function custom_theme_preprocess_paragraph__text_with_image(&$variables) {
  $paragraph = $variables['paragraph'];

  if ($fields = $paragraph->get('field_image_position')->getValue()) {

    if (isset($fields[0]) && $fields[0]['value'] === 'right') {
      $variables['image_position'] = 'right';
    } else {
      $variables['image_position'] = 'left';
    }
  }
}

/*
 * Implements hook_preprocess_paragraph().
 * For explainer paragraphs.
 */
function custom_theme_preprocess_paragraph__explainer(&$variables) {
  $paragraph = $variables['paragraph'];
  $variables['tabs'] = null;
  $variables['tabs_content'] = null;

  if ($fields = $paragraph->get('field_path')->getValue()) {
    $ids = [];

    foreach ($fields as $field) {
      $ids[] = $field['target_id'];
    }

    if (count($ids)) {

      // Path.
      if ($paragraph->field_path && !$paragraph->field_path->isEmpty()) {
        $entities = entity_load_multiple('simple_elements', $ids);

        // Tabs.
        $variables['tab'] = entity_view_multiple($entities, 'tab');

        // Tabs content.
        $variables['tab_content'] = entity_view_multiple($entities, 'tab_content');
      }
    }
  }
}

/**
 * Implements template_preprocess_taxonomy_term().
 */
function custom_theme_preprocess_taxonomy_term(&$variables) {}

/*
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function custom_theme_theme_suggestions_taxonomy_term_alter(
  &$suggestions,
  $variables,
  $hook
) {
  $suggestions[] = 'taxonomy_term__' . $variables['elements']['#taxonomy_term']->getVocabularyId() . '__' . $variables['elements']['#view_mode'];
  $suggestions[] = 'taxonomy_term__' . $variables['elements']['#view_mode'];
}

/**
 * Implement hook_preprocess_block()
 */
function custom_theme_preprocess_block(&$variables) {
  $id = $variables['elements']['#id'];
  $variables['content']['#attributes']['block'] = $id;
}

/**
 * Implements template_proprocess_node().
 */
function custom_theme_preprocess_node(&$variables) {
  $node = $variables['node'];
  $user = $node->getOwner();
}

/**
 * Implements template_preprocess_user().
 */
function custom_theme_preprocess_user(&$variables) {
  $user = $variables['user'];
  $view_mode = $variables['elements']['#view_mode'];
  $variables['url'] = $user->toUrl();
}

/**
 * Implements hook_preprocess_eck_entity().
 */
function custom_theme_preprocess_eck_entity(&$variables) {
  $entity = $variables['eck_entity'];
  $variables['tabs'] = null;
  $variables['tabs_content'] = null;

  if ($entity->hasField('field_path_item')) {

    if ($fields = $entity->get('field_path_item')->getValue()) {
      $ids = [];

      foreach ($fields as $field) {
        $ids[] = $field['target_id'];
      }

      if (count($ids)) {

        // Path item.
        if ($entity->field_path_item && !$entity->field_path_item->isEmpty()) {
          $entities = entity_load_multiple('simple_elements', $ids);

          // Tabs.
          $variables['tab'] = entity_view_multiple($entities, 'tab');

          // Tabs content.
          $variables['tab_content'] = entity_view_multiple($entities, 'tab_content');
        }
      }
    }
  }
}
